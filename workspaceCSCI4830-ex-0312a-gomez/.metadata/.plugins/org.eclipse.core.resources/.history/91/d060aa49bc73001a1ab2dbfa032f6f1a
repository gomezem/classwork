package q1.extract_method.refactored;

import java.util.List;

public class A {
   Node m1(List<Node> nodes, String p) {
      //
      return null;
   }

   Edge m2(List<Edge> edgeList, String p) {
      //
      return null;
   }

   
   // TODO: Your answer
   // ? extractedMethod(?) {
   //
   // }
   <T extends Graph> T extractedMethod(List<T> objects, String p) {
	   for (Node objs : objs) {
		   if (node.contains(p))
		   System.out.println(objs);
		   }
	   	   return null;
   }
  
}
class Graph {
	
}

class Node {
   String name;

   public boolean contains(String p) {
      return name.contains(p);
   }
}

class Edge {
   String name;

   public boolean contains(String p) {
       return name.contains(p);
   }
}